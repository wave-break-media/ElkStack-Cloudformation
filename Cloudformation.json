{
    "AWSTemplateFormatVersion": "2010-09-09",

    "Description": "ELK Stack - Elasticsearch, Logstash, Kibana",

    "Parameters": {

        "KeyName": {
            "Default": "Test-DevOps",
            "Description": "ssh key name",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "Stage": {
            "Description": "Stage",
            "Type": "String",
            "Default": "PROD",
            "AllowedValues": [ "PROD", "CODE" ],
            "ConstraintDescription": "must be a valid stage eg. PROD, CODE"
        },
        "LogstashCapacity": {
            "Description": "Logstash Autoscale Size",
            "Type": "Number",
            "Default": "1",
            "MinValue": 1,
            "MaxValue": 4
        },
        "LogstashInstanceType": {
            "Description": "Logstash EC2 instance type",
            "Type": "String",
            "Default": "t2.small",
            "AllowedValues": [
                "t1.micro",
                "t2.small",
                "t2.medium",
                "t2.large"

            ],
            "ConstraintDescription": "must be a valid EC2 instance type"
        },
        "ClusterName": {
            "Default": "elasticsearch",
            "Description": "Elasticsearch domain name",
            "Type": "String"
        },
        "ElasticsearchInstanceType": {
            "Description": "Elasticsearch instance type",
            "Type": "String",
            "Default": "t2.medium.elasticsearch",
            "AllowedValues": [
                "t2.micro.elasticsearch",
                "t2.small.elasticsearch",
                "t2.medium.elasticsearch",
                "m3.medium.elasticsearch",
                "m3.large.elasticsearch"
            ],
            "ConstraintDescription": "must be a valid Elasticsearch instance type"
        },
        "ElasticsearchInstanceCount": {
            "Description": "Elasticsearch desired Instance count",
            "Type": "Number",
            "Default": "1"
        },
        "ESRegion": {
            "Default": "eu-west-1",
            "Description": "Elasticsearch region",
            "Type": "String"
        },
        "HostedZoneDomain": {
            "Default": "",
            "Description": "HostedZone Domain name",
            "Type": "String"
        },
        "LogstashName": {
            "Default": "",
            "Description": "Assign Logstash DNS name",
            "Type": "String"
        },
        "IpAddress": {
            "Default": "",
            "Description": "Ip address to give access to Kibana",
            "Type": "String"
        },
        "VpcId": {
            "Description": "ID of the VPC onto which to launch the application eg. vpc-1234abcd",
            "Type": "AWS::EC2::VPC::Id"
        },
        "VpcSubnets" : {
            "Description": "Subnets to use in VPC eg. subnet-abcd1234",
            "Type": "List<AWS::EC2::Subnet::Id>"
        } 
        
    },

    "Resources": {

        "LogstashLoadBalancer": {
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties": {
                "CrossZone": true,
                "Listeners": [
                    {
                        "Protocol": "TCP",
                        "LoadBalancerPort": "6379",
                        "InstancePort": "6379"
                    },
                    {
                        "Protocol": "HTTP",
                        "LoadBalancerPort": "80",
                        "InstancePort": "80"
                    }
                ],
                "HealthCheck": {
                    "Target": "HTTP:80/",
                    "Timeout": "10",
                    "Interval": "20",
                    "UnhealthyThreshold": "10",
                    "HealthyThreshold": "2"
                },
                "Subnets": { "Ref": "VpcSubnets" },
                "SecurityGroups": [
                    { "Ref": "LogstashLoadBalancerSecurityGroup" }
                ]
            }

        },

        "LogstashLoadBalancerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": { "Ref": "VpcId" },
                "GroupDescription": "Open up HTTP access to load balancer",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "6379",
                        "ToPort": "6379",
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "6379",
                        "ToPort": "6379",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },

        "LogstashAutoscalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "AvailabilityZones": { "Fn::GetAZs": "" },
                "VPCZoneIdentifier": { "Ref": "VpcSubnets" },
                "LaunchConfigurationName": { "Ref": "LogstashLaunchConfig" },
                "MinSize": "1",
                "MaxSize": "4",
                "DesiredCapacity": { "Ref": "LogstashCapacity" },
                "HealthCheckType": "ELB",
                "HealthCheckGracePeriod": 300,
                "LoadBalancerNames": [ { "Ref": "LogstashLoadBalancer" } ],
                "Tags": [
                    {
                        "Key": "Stage",
                        "Value": { "Ref": "Stage" },
                        "PropagateAtLaunch": "true"
                    },
                    {
                        "Key": "Stack",
                        "Value": { "Ref": "AWS::StackName" },
                        "PropagateAtLaunch": "true"
                    },
                    {
                        "Key": "App",
                        "Value": "logstash",
                        "PropagateAtLaunch": "true"
                    },
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join":[ "-", [ { "Ref": "AWS::StackName" }, "logstash" ] ] },
                        "PropagateAtLaunch": "true"
                    }
                ]
            }
        },

        "LogstashLaunchConfig": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "ImageId": "ami-c39604b0",
                "SecurityGroups": [ { "Ref": "LogstashSecurityGroup" } , { "Ref": "LogstashLoadBalancerSecurityGroup" } ],
                "InstanceType": { "Ref": "LogstashInstanceType" },
                "KeyName": { "Ref": "KeyName" },
                "IamInstanceProfile": { "Ref": "InstanceProfile" },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [ "\n", [
                            "#!/bin/bash -v",
                            "curl -L -O https://download.elastic.co/logstash/logstash/packages/centos/logstash-2.3.2-1.noarch.rpm",
                            "rpm -i logstash-2.3.2-1.noarch.rpm",
                            "yum -y install nginx",
                            "/etc/init.d/nginx restart",

                            "wget -O /etc/logstash/conf.d/logstash-indexer.conf https://bitbucket.org/wbmgeneral/elkstack-cloudformation/raw/master/logstash-indexer.conf",
                            
                            { "Fn::Join": [ "", [ "sed -i",
                                " -e 's,@@ELASTICSEARCH,", { "Fn::GetAtt": [ "ElasticsearchDomain", "DomainEndpoint" ]}, ",g'",
                                " /etc/logstash/conf.d/logstash-indexer.conf" ] ] },

                            { "Fn::Join": [ "", [ "sed -i",
                                " -e 's,@@REGION,", { "Ref" : "ESRegion"}, ",g'",
                                " /etc/logstash/conf.d/logstash-indexer.conf" ] ] },

                            "mkdir -p /opt/logstash/patterns",
                            "wget -O /opt/logstash/patterns/nginx https://bitbucket.org/wbmgeneral/elkstack-cloudformation/raw/master/nginx-pattern",
                            "/opt/logstash/bin/logstash-plugin install logstash-output-amazon_es",
                            "/etc/init.d/logstash restart",
                            
                            "wget -O /etc/logstash/GeoLiteCity.dat.gz http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz",
                            "gunzip /etc/logstash/GeoLiteCity.dat.gz"

                        ] ]
                    }
                }
            }
        },

        "LogstashSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "SSH, Elasticsearch, and HTTP",
                "VpcId": { "Ref": "VpcId" },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "6379",
                        "ToPort": "6379",
                        "SourceSecurityGroupId": { "Ref": "LogstashLoadBalancerSecurityGroup" }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "SourceSecurityGroupId": { "Ref": "LogstashLoadBalancerSecurityGroup" }
                    }
                ]
            }
        },

        "Role": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Path": "/",
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [ "ec2.amazonaws.com" ]
                            }
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName":"LoggerServerPolicy",
                        "PolicyDocument": {
                            "Version" : "2012-10-17",
                            "Statement": [
                                {
                                    "Action": "ec2:DescribeInstances",
                                    "Effect": "Allow",
                                    "Resource": "*"
                                },
                                {
                                    "Resource": { "Fn::GetAtt" : [ "ElasticsearchDomain", "DomainArn" ] },
                                    "Action": ["es:*"],
                                    "Effect": "Allow"
                                },
                                {
                                   "Resource": { "Fn::GetAtt" : [ "ElasticsearchDomain", "DomainArn" ] },
                                   "Action": ["es: DeleteElasticsearchDomain",
                                              "es: CreateElasticsearchDomain"],
                                   "Effect": "Deny"
                                }
                            ]
                        }
                    }
                ]
            }
        },

        "InstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [ { "Ref": "Role" } ]
            }
        },


       "ElasticsearchDomain": {
            "Type": "AWS::Elasticsearch::Domain",
            "Properties": {
                "DomainName" : { "Ref" : "ClusterName" },
                "ElasticsearchClusterConfig": {
                    "InstanceCount": { "Ref" : "ElasticsearchInstanceCount" } ,
                    "ZoneAwarenessEnabled": "false",
                    "InstanceType": { "Ref" : "ElasticsearchInstanceType" }
                },
                "EBSOptions": {
                    "EBSEnabled": true,
                    "Iops": 0,
                    "VolumeSize": 20,
                    "VolumeType": "gp2"
                },
                "ElasticsearchVersion": "2.3",
                "SnapshotOptions": {
                    "AutomatedSnapshotStartHour": "0"
                },
                "AccessPolicies": {
                     "Version": "2012-10-17",
                     "Statement": [
                        {
                           "Resource": "*",
                           "Principal": {
                                "AWS": "*"
                            },
                           "Action": ["es:ESHttpGet", "es:ESHttpPut", "es:ESHttpPost", "es:ESHttpHead"],
                           "Effect": "Allow",
                           "Condition": {
                               "IpAddress": {
                                   "aws:SourceIp": [{ "Ref" : "IpAddress" }]
                                }
                            }
                        }
                    ]
                },
                "AdvancedOptions": {
                    "rest.action.multi.allow_explicit_index": "true"
                }
            }
        },

        "LogstashDNS" : {
            "Type" : "AWS::Route53::RecordSetGroup",
            "Properties" : {
                "HostedZoneName" : { "Fn::Join" : [ "", [{"Ref" : "HostedZoneDomain"}, "." ]]},
                "RecordSets" : [
                  {
                    "Name" : { "Fn::Join" : [ "", [ {"Ref" : "LogstashName"}, ".", {"Ref" : "HostedZoneDomain"}, "."]]},
                    "Type" : "CNAME",
                    "TTL" : "300",
                    "ResourceRecords" : [ { "Fn::GetAtt" : [ "LogstashLoadBalancer", "DNSName" ] } ]
                  }
                ]
            }
        }

    },

    "Outputs": {
        "LogstashEndpoint": {
            "Value":  { "Fn::Join" : [ "", [ {"Ref" : "LogstashName"}, ".", {"Ref" : "HostedZoneDomain"}, ":6379"]]},
            "Description": "Logging endpoint for Logstash TCP input"
        }
    }
}

